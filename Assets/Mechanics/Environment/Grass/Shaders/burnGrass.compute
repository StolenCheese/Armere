// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

#include "MeshProperties.cginc"

cbuffer CB{
    float dt;
    float3 burntColor;
    int2 dispatchSize;
}; 

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
Texture2D<float> FireMap;
RWStructuredBuffer<MeshProperties> _Properties;


[numthreads(THREADGROUPX,THREADGROUPY,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    // TODO: insert actual code here!

    int index = DispatchThreadToIndex(id,dispatchSize);
    
    float2 uv = (_Properties[index].position.xz + 10.0 ) / 20.0;

    float fire = FireMap[uv *16];

    //Reduce color by deltatime and colour

    _Properties[index].color.rgb = lerp(_Properties[index].color.rgb , burntColor, fire * dt); 
}
