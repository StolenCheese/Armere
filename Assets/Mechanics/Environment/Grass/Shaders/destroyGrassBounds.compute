#pragma kernel CSMain




cbuffer CB{
    float4 boundsTransform;
    float3 boundsExtents;
    int2 dispatchSize;
}; 

#include "MeshProperties.hlsl"


RWStructuredBuffer<MeshProperties> _Grass;



// For the sake of simplicity, only using 1, 1, 1 threads.
//lol no
[numthreads(THREADGROUPS,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID) {

    uint index = id.x;

    //Transform the point into bounds local space
    float3 p = _Grass[index].position - boundsTransform.xyz;
    //Rotate the point around the y axis
	float s;
	float c;
    sincos(boundsTransform.w,s, c);

    p = float3(
        p.x * c - p.z * s,
        p.y,
        p.x * s + p.z * c
    );

    if (all( abs(p) < boundsExtents)){
        _Grass[index].chunkID = 0;
    }
}